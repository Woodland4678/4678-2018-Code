// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/DriveRobot.h"
#include "Commands/FindCubes.h"
#include "Commands/LowerIntake.h"
#include "Commands/PickUpCube.h"
#include "Commands/RaiseIntake.h"
#include "Commands/raiseCube.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    driver.reset(new frc::Joystick(0));
    
    driverBtn9.reset(new frc::JoystickButton(driver.get(), 9));
    driverBtn9->WhenPressed(new raiseCube());
    driverBtn6.reset(new frc::JoystickButton(driver.get(), 6));
    driverBtn6->WhenPressed(new RaiseIntake());
    driverBtn5.reset(new frc::JoystickButton(driver.get(), 5));
    driverBtn5->WhenPressed(new LowerIntake());
    driverBtn2.reset(new frc::JoystickButton(driver.get(), 2));
    driverBtn2->WhenPressed(new PickUpCube());
    driverBtn8.reset(new frc::JoystickButton(driver.get(), 10));
    driverBtn8->WhenPressed(new FindCubes());

    // SmartDashboard Buttons
    frc::SmartDashboard::PutData("raiseCube", new raiseCube());
    frc::SmartDashboard::PutData("LowerIntake", new LowerIntake());
    frc::SmartDashboard::PutData("RaiseIntake", new RaiseIntake());
    frc::SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<frc::Joystick> OI::getdriver() {
   return driver;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

void OI::driverRumble(double power) {
	driver->SetRumble(frc::GenericHID::RumbleType::kLeftRumble, power);
}
